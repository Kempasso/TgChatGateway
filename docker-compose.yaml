version: '3.9'
services:
  postgresql:
    image: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - my_network

    healthcheck:
      test: [ 'CMD', 'pg_isready', '-q', '-d', $POSTGRES_DB, '-U', $POSTGRES_USER ]
      interval: 3s
      retries: 4
      timeout: 5s
  redis:
    image: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      retries: 4
      timeout: 5s
    networks:
      - my_network

  application:
    build:
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgresql+asyncpg://$POSTGRES_USER:$POSTGRES_PASSWORD@postgresql:$POSTGRES_PORT/$POSTGRES_DB"
      REDIS_URL: "redis://redis"
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    networks:
      - my_network
    depends_on:
      migrations:
        condition: service_completed_successfully
      localtunnel:
        condition: service_started
      redis:
        condition: service_started

  migrations:
    build:
      dockerfile: Dockerfile-migrations
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgresql+asyncpg://$POSTGRES_USER:$POSTGRES_PASSWORD@postgresql:$POSTGRES_PORT/$POSTGRES_DB"
      REDIS_URL: "redis://redis"
    networks:
      - my_network
    depends_on:
      postgresql:
        condition: service_healthy
    command: "alembic upgrade head"

  localtunnel:
    build:
      dockerfile: Dockerfile-localtunel
    command: "lt --port 8000 --local_https true --subdomain dser41v --local-host application"
    depends_on:
      migrations:
        condition: service_completed_successfully

    networks:
      - my_network

networks:
  my_network:
    driver: 'bridge'

volumes:
  postgresql_data:
  redis_data: